========================== Question ==============================

Given an array arr[] and an integer target. You have to find the number of pairs in the array whose sum is strictly less than the target.

Examples:

Input: arr[] = [7, 2, 5, 3], target = 8
Output: 2
Explanation: There are 2 pairs with sum less than 8: (2, 5) and (2, 3). 
Input: arr[] = [5, 2, 3, 2, 4, 1], target = 5
Output: 4
Explanation: There are 4 pairs whose sum is less than 5: (2, 2), (2, 1), (3, 1) and (2, 1).
Input: arr[] = [2, 1, 8, 3, 4, 7, 6, 5], target = 7
Output: 6
Explanation: There are 6 pairs whose sum is less than 7: (2, 1), (2, 3), (2, 4), (1, 3), (1, 4) and (1, 5).
Constraints:
1 <= arr.size() <= 105
0 <= arr[i] <= 104
1 <= target <= 104


========================== Answer ==============================

import java.util.Arrays;

public class Solution {
    public static int countPairs(int[] arr, int target) {
        Arrays.sort(arr);
        int count = 0;
        int left = 0;
        int right = arr.length - 1;

        while (left < right) {
            if (arr[left] + arr[right] < target) {
                count += (right - left);
                left++;
            } else {
                right--;
            }
        }

        return count;
    }

    public static void main(String[] args) {
        int[] arr1 = {7, 2, 5, 3};
        int target1 = 8;
        System.out.println(countPairs(arr1, target1)); // Output: 2

        int[] arr2 = {5, 2, 3, 2, 4, 1};
        int target2 = 5;
        System.out.println(countPairs(arr2, target2)); // Output: 4

        int[] arr3 = {2, 1, 8, 3, 4, 7, 6, 5};
        int target3 = 7;
        System.out.println(countPairs(arr3, target3)); // Output: 6
    }
}



Link: <https://www.geeksforgeeks.org/batch/gfg-160-problems/track/two-pointer-technique-gfg-160/problem/count-pairs-whose-sum-is-less-than-target> 
