===================== Question ===========================
Given a string s, find the length of the longest substring with all distinct characters. 

Examples:

Input: s = "geeksforgeeks"
Output: 7
Explanation: "eksforg" is the longest substring with all distinct characters.
Input: s = "aaa"
Output: 1
Explanation: "a" is the longest substring with all distinct characters.
Input: s = "abcdefabcbb"
Output: 6
Explanation: The longest substring with all distinct characters is "abcdef", which has a length of 6.
Constraints:
1<= s.size()<=3*104
All the characters are in lowercase.


===================== Answer ===========================

import java.util.HashSet;
import java.util.Set;

public class LongestSubstring {
    public static void main(String[] args) {
        String s1 = "geeksforgeeks";
        String s2 = "aaa";
        String s3 = "abcdefabcbb";
        
        System.out.println("Input: " + s1 + "\nOutput: " + new LongestSubstring().longestUniqueSubstr(s1));
        System.out.println("Input: " + s2 + "\nOutput: " + new LongestSubstring().longestUniqueSubstr(s2));
        System.out.println("Input: " + s3 + "\nOutput: " + new LongestSubstring().longestUniqueSubstr(s3));
    }

    public int longestUniqueSubstr(String s) {
        int n = s.length();
        HashSet<Character> set = new HashSet<>();
        int maxLength = 0, i = 0, j = 0;

        while (i < n && j < n) {
            if (!set.contains(s.charAt(j))) {
                set.add(s.charAt(j++));
                maxLength = Math.max(maxLength, j - i);
            } else {
                set.remove(s.charAt(i++));
            }
        }
        return maxLength;
    }
}



Link: <https://www.geeksforgeeks.org/batch/gfg-160-problems/track/two-pointer-technique-gfg-160/problem/longest-distinct-characters-in-string5848>
